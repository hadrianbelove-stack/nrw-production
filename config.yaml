# NRW Configuration
workflow:
  daily_check_time: "02:00"  # 2 AM PST
  weekly_bootstrap_day: "sunday"
  
display:
  days_back: 90  # Show movies from last N days
  min_movies: 20  # Minimum movies to display
  max_movies: 100  # Maximum movies to display

tracking:
  bootstrap_days: 7  # Look back N days for new releases
  check_interval_hours: 24  # How often to check
  
discovery:
  days_back: 14  # Discovery window for finding new premieres (expanded to catch more releases)
  max_pages: 20  # Maximum pages to fetch for discovery (increased for expanded discovery)
  enable_pass_a: true  # Enable Pass A: Direct-to-digital releases (release_date + type=4)
  enable_pass_b: true  # Enable Pass B: Theatrical releases (primary_release_date)

api:
  tmdb_api_key: "99b122ce7fa3e9065d7b7dc6e660772d"  # From PROJECT_CHARTER.md line 259
  watchmode_api_key: "bBMpVr31lRfUsSFmgoQp0jixDrQt8DIKCVg7EFdp"
  tmdb_rate_limit: 0.1  # Seconds between API calls
  max_retries: 3
  max_pages_bootstrap: 49  # Maximum pages to fetch for bootstrap operation

# Agent scraper (Playwright): For Netflix/Disney+/HBO Max/Hulu - DISABLED due to authentication barriers
# Uses playwright for stealth browsing but blocked by login requirements
agent_scraper:
  enabled: true  # Enabled as fallback when Watchmode API has no data
  headless: true  # Run browser in headless mode (required for CI)
  rate_limit: 2.0  # Minimum seconds between scrapes
  timeout: 10  # Page load timeout in seconds
  max_retries: 3  # Increased from 1 for exponential backoff
  cache_ttl_days: 30  # Cache expiration (days)
  screenshots_enabled: true  # Capture screenshots on failure
  screenshot_retention_days: 7  # Auto-delete old screenshots
  exponential_backoff:
    base_delay: 0.5  # Initial retry delay (seconds)
    max_delay: 5.0  # Maximum retry delay (seconds)
    jitter_ratio: 0.2  # Randomness factor (Â±20%)

# Platform scraper (Selenium): For Amazon/Apple TV - ENABLED as Watchmode fallback
# Uses selenium for Amazon/Apple TV since they don't require authentication
# Only runs when Watchmode API has no data, focuses on recent releases
platform_scraper:
  enabled: true  # Enable Selenium-based Amazon/Apple TV scraper as Watchmode fallback
  headless: true  # Run browser in headless mode for production
  rate_limit: 2.0  # Seconds between scrapes to avoid rate limiting
  timeout: 10  # Page load timeout in seconds
  max_retries: 2  # Retry attempts on failure
  platforms:
    amazon: true  # Enable Amazon Prime Video scraping
    apple_tv: false  # Disable Apple TV scraping (user doesn't need it)
  maintenance:
    last_selector_update: "2025-10-23"  # Track when selectors were last verified
    expected_update_frequency: "quarterly"  # How often selectors typically need updates
    # Note: Last validation test (2025-10-24) was invalid due to TMDB API key configuration error
    # Amazon scraper validated at 100% success rate, but overall test incomplete
    # Re-run validation after fixing config.yaml to get complete statistics
    # Note: Acceptable failure rate, manual admin overrides handle edge cases
    # Implementation: streaming_platform_scraper.py (separate from agent_scraper.py)

rt_scraper:
  enabled: true  # Enable/disable RT scraping
  headless: true  # Run browser in headless mode
  rate_limit: 2.0  # Minimum seconds between scrapes
  timeout: 10  # Page load timeout in seconds
  max_retries: 1  # Number of retries on failure (RT is less critical than watch links)
  cache_ttl_days: 90  # RT links are stable, longer TTL than agent scraper

validation:
  min_recall: 0.75  # Minimum discovery recall threshold (75%)
  min_precision: 0.70  # Minimum discovery precision threshold (70%)
  min_provider_coverage: 10  # Minimum number of movies with non-search watch links per week

newsletter:
  auto_generate: false  # Set to true to generate newsletter during daily automation
  days_back: 7  # Default date range for newsletter (7 = weekly, 30 = monthly)
  output_dir: "newsletters/"  # Directory for generated newsletters
  formats:
    - markdown  # Generate markdown format
    - html      # Generate HTML format
    - text      # Generate plain text format

# Affiliate Program Configuration
# Sign up for affiliate programs to earn commissions on movie rentals/purchases
# NOTE: Most affiliate programs require an existing website before approval
# Set enabled=false for now, enable after getting approved and adding your IDs
affiliate:
  enabled: false  # Set to true after signing up for affiliate programs

  # Amazon Associates - https://affiliate-program.amazon.com/
  # Commission: 5% on digital video, 24-hour cookie (earns on ANY purchase within 24h)
  # Application requirements: Active website with content, 10+ posts/pages, regular traffic
  amazon:
    enabled: false  # Enable after getting your affiliate tag
    tag: "REPLACE_WITH_YOUR_AMAZON_TAG"  # e.g., "yoursite-20"
    # Get your tag from: https://affiliate-program.amazon.com/home/account/tag/manage

  # Apple Performance Partners - https://performance-partners.apple.com/
  # Commission: 7% on movies/TV, 30-day cookie, $100 min payout
  # Application requirements: Website/app with relevant content, approved by Apple
  apple:
    enabled: false  # Enable after getting your affiliate token
    token: "REPLACE_WITH_YOUR_APPLE_TOKEN"  # e.g., "1000lxyz"
    # Get your token from: https://performance-partners.apple.com/resources/documentation/affiliate-token-guide

  # Future platforms can be added here as needed
  # vudu:
  #   enabled: false
  #   affiliate_id: ""